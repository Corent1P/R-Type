name: R-Type
run-name: R-Type
env:
    MIRROR_URL: git@github.com:EpitechPromo2027/B-CPP-500-MLH-5-1-rtype-corentin.piquet.git

on:
    push:
        branches-ignore:
            - "ga-ignore**"
    pull_request:
        branches-ignore:
            - "ga-ignore**"


jobs:
    check_program_compilation:
        runs-on: ubuntu-latest
        container:
            image: epitechcontent/epitest-docker:latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: |
                  ~/.cache/pip
                  ~/.conan2
                key: ${{ runner.os }}-dependencies-${{ hashFiles('**/conanfile.txt') }}
                restore-keys: |
                  ${{ runner.os }}-dependencies-

            - name: Create default Conan profile
              if: ${{steps.cache-conan.outputs.cache-hit != 'true'}}
              run: conan profile new default --detect

            - name: Install dependencies
              id: package
              run: |
                  sudo apt-get update -y && sudo apt-get install -y pipx
                  pipx install conan
                  pipx ensurepath
                  echo "$HOME/.local/bin" >> $GITHUB_PATH
                  sudo apt-get install -y libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev

            - name: Configure Cmake
              run: |
                conan install . --output-folder=build --build=missing -c tools.system.package_manager:mode=install
                cmake . -DCMAKE_TOOLCHAIN_FILE=./build/build/Release/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release

            - name: Compilation with CMake
              id: build
              if: steps.package.outcome == 'success'
              run: |
                  cmake --build build/
                  make unit_tests

            - name: Run Unit Tests Client
              if: steps.build.outcome == 'success'
              run: |
                  ./unit_tests_client --verbose
                  gcovr --exclude tests
                  gcovr --exclude tests --branches

            - name: Run Unit Tests ECS
              if: steps.build.outcome == 'success'
              run: |
                  ./unit_tests_ecs --verbose
                  gcovr --exclude tests
                  gcovr --exclude tests --branches

            - name: Run Unit Tests Server
              if: steps.build.outcome == 'success'
              run: |
                  ./unit_tests_server --verbose
                  gcovr --exclude tests
                  gcovr --exclude tests --branches

    push_to_mirror:
        needs: [check_program_compilation]
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'push' }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Push to Epitech Repository
              uses: pixta-dev/repository-mirroring-action@v1.1.1
              with:
                  target_repo_url: ${{env.MIRROR_URL}}
                  ssh_private_key: ${{secrets.SSH_PRIVATE_KEY}}
