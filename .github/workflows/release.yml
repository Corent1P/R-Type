name: Create Release
on:
  workflow_run:
    workflows: ["R-Type"]
    types:
      - completed
    branches:
      - main
permissions:
  contents: write
  packages: write
jobs:
  create-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install NSIS
        run: |
          sudo apt-get update -y
          sudo apt-get install -y nsis zip unzip
      - name: Create ZIP of Source
        run: |
          zip -r r-type.zip . -x "*.git/*" "vcpkg/*" "build/*"
      - name: Generate NSIS Script
        run: |
          cat > installer.nsi << 'EOF'
          !include "MUI2.nsh"
          !include "FileFunc.nsh"

          !define PRODUCT_NAME "R-Type"
          !define PRODUCT_VERSION "${{ github.sha }}"
          !define INSTALLER_NAME "R-Type-Setup.exe"
          !define REPO_URL "https://github.com/YOUR_USERNAME/YOUR_REPO/archive/refs/heads/main.zip"  ; Replace with your actual repository URL

          SetCompressor lzma
          Name "${PRODUCT_NAME}"
          OutFile "${INSTALLER_NAME}"
          InstallDir "$DOCUMENTS\${PRODUCT_NAME}"
          RequestExecutionLevel admin

          !insertmacro MUI_PAGE_WELCOME
          !insertmacro MUI_PAGE_DIRECTORY
          !insertmacro MUI_PAGE_INSTFILES
          !insertmacro MUI_LANGUAGE "English"

          Section "MainSection" SEC01
              SetOutPath "$INSTDIR"

              DetailPrint "Downloading repository..."
              nsExec::ExecToLog 'powershell -Command "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Invoke-WebRequest -Uri \"${REPO_URL}\" -OutFile \"$INSTDIR\repo.zip\""'
              Pop $0
              ${If} $0 != 0
                  DetailPrint "Failed to download repository"
                  Abort "Repository download failed"
              ${EndIf}

              DetailPrint "Extracting files..."
              nsExec::ExecToLog 'powershell -Command "Expand-Archive -Path \"$INSTDIR\repo.zip\" -DestinationPath \"$INSTDIR\" -Force"'
              Pop $0
              ${If} $0 != 0
                  DetailPrint "Failed to extract repository"
                  Abort "Repository extraction failed"
              ${EndIf}

              Delete "$INSTDIR\repo.zip"

              FindFirst $0 $1 "$INSTDIR\*-main"
              ${If} $1 == ""
                  FindFirst $0 $1 "$INSTDIR\*-master"
              ${EndIf}

              DetailPrint "Starting build process..."
              SetDetailsPrint both
              ${If} $1 != ""
                  ExecWait 'cmd.exe /c cd "$INSTDIR\$1" && build.bat' $0
              ${Else}
                  ExecWait 'cmd.exe /c cd "$INSTDIR" && build.bat' $0
              ${EndIf}
              FindClose $0
              DetailPrint "Build process finished with exit code $0"
          SectionEnd
          EOF
      - name: Create R-Type Installer
        run: |
          makensis installer.nsi
      - name: Get R-Type Version
        id: version
        run: |
          echo "version=$(git describe --tags --always)" >> $GITHUB_OUTPUT
      - name: Create Release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            r-type.zip
            R-Type-Setup.exe
          token: ${{ secrets.GITHUB_TOKEN }}
